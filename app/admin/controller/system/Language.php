<?php
declare(strict_types=1);
/**
 * @Create by PhpStorm
 * @author:jinxiu89@163.com
 * @Create Date:2020/5/29 15:31
 * @User: admin
 * @Current File : Language.php
 * @格言：溪涧岂能留得住，终归大海做波涛 --李忱
 * @格言： 我的内心因看见大海而波涛汹涌
 **/

namespace app\admin\controller\system;


use app\admin\controller\BaseAdmin;
use Exception;
use think\App;
use think\facade\Session;
use think\facade\View;
use app\admin\service\system\Language as service;
use app\admin\validate\system\Language as validate;
use think\response\Json;

class Language extends BaseAdmin
{

    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * Language constructor.
     * @param App $app
     */
    public function __construct(App $app)
    {
        parent::__construct($app);
        $this->service = new service();
        $this->validate = new validate();
    }

    /**
     * @return string
     * @throws Exception
     */
    public function index()
    {
        if ($this->request->isGet()) {
            $data = $this->service->getDataByStatus((int)1);
            View::assign('data', $data);
            return View::fetch();
        }
    }

    /**
     *
     */
    public function addLanguage()
    {
        if ($this->request->isGet()) {
            return View::fetch();
        }
        if ($this->request->isPost()) {
            $data = input('post.', [], 'htmlspecialchars');
            if (!$this->validate->scene('add')->check($data)) {
                return show(0, $this->validate->getError());
            }
            if ($this->service->create((array)$data)) {
                return show(1, '新增成功');
            }
            return show(0, '新增失败，未知原因');
        }
    }

    /**
     * @return string|Json
     * @throws Exception
     */
    public function editLanguage()
    {
        if ($this->request->isGet()) {
            $id = $this->request->param('id', '', ['int', 'trim', 'htmlspecialchars']);
            $result = $this->service->getDataById((int)$id);
            View::assign('result', $result);
            return View::fetch();
        }
        if ($this->request->isPost()) {
            $data = input('post.', [], 'htmlspecialchars');
            if (!$this->validate->scene('edit')->check($data)) {
                return show(0, $this->validate->getError());
            }
            if ($this->service->update((array)$data)) {
                return show(1, '保存成功');
            }
            return show(0, '新增失败，未知原因');
        }
    }
}